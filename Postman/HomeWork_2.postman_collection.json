{
	"info": {
		"_postman_id": "c5b71e3b-19f7-409f-b237-d394982aa986",
		"name": "HomeWork_1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"// http://162.55.220.72:5005/first\r",
							"// 1. Отправить запрос.\r",
							"// {{URL}}/first\r",
							"\r",
							"// 2. Статус код 200\r",
							" pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							" pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							" var jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							" pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Vova\");\r",
							"});\r",
							"\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql('25');\r",
							"});\r",
							"\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							" pm.test(\"Your test salary\", function () {\r",
							"        pm.expect(jsonData.salary).to.eql(1000);\r",
							"    });\r",
							"\r",
							"\r",
							"// 7. Спарсить request.\r",
							" var req = request.data;\r",
							"\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							" pm.test(\"Request name\", function () {\r",
							"    var response = pm.response.json();\r",
							"    var req = request.data;\r",
							"    pm.expect(req.name).to.eql(response.name);\r",
							"});\r",
							"\r",
							"\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							" pm.test(\"Request age\", function () {\r",
							"    var response = pm.response.json();\r",
							"    var req = request.data;\r",
							"    pm.expect(req.age).to.eql(response.age);\r",
							"});\r",
							"\r",
							"\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							" pm.test(\"Request salary\", function () {\r",
							"    var response = pm.response.json();\r",
							"    var req = request.data;\r",
							"    pm.expect(parseInt(req.salary)).to.eql(response.salary);\r",
							"});\r",
							"\r",
							"\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							" var response = pm.response.json();  \r",
							"    console.log(response[\"family\"]);\r",
							"\r",
							"\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							" pm.test(\"Test_u_salary\", function () {\r",
							"    var resp = pm.response.json();\r",
							"    var req = request.data;\r",
							"    pm.expect(req.salary*4).to.eql(resp.family.u_salary_1_5_year);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vova",
							"type": "text"
						},
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_1?name=Vova&age=25&weight=74",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Vova"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "weight",
							"value": "74"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_2?name=Vova&age=25&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Vova"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"    var resp = pm.response.json();\r",
							"    \r",
							"// 4. Спарсить request.\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\" test name\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\" test age\", function () {\r",
							"    pm.expect(resp.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\" test salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(parseInt(req.salary));\r",
							"});\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"let abc = pm.response.json();\r",
							"console.log(abc.family);\r",
							"\r",
							"\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"dog_name\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"dog_age\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"name_Luky\", function () {\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"// 12. Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"age_4\", function () {\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Vova&age=25&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vova"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_4\r",
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json. \r",
							"var resp = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request.\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check_name\", function(){\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"})\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Check_age\", function(){\r",
							"    pm.expect(resp.age).to.eql(+req.age);\r",
							"})\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"console.log(\"request\" + req.salary)\r",
							"\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"console.log(\"response\" + resp.salary)\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"response 0-й элемент\" + \" \" + resp.salary[0])\r",
							"\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"response 1-ый элемент\" + \" \" + resp.salary[1])\r",
							"\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"response 2-ый элемент\" + \" \" + resp.salary[2])\r",
							"\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check_salary\", function(){\r",
							"    pm.expect(resp.salary[0]).to.eql(+req.salary);\r",
							"})\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Check_salary_2\", function(){\r",
							"    pm.expect(parseInt(resp.salary[1])).to.eql(req.salary*2);\r",
							"})\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Check_salary_3\", function(){\r",
							"    pm.expect(parseInt(resp.salary[2])).to.eql(req.salary*3);\r",
							"})\r",
							"\r",
							"// // 15. Создать в окружении переменную name\r",
							"// // 16. Создать в окружении переменную age\r",
							"// // 17. Создать в окружении переменную salary\r",
							"\r",
							"// 18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", req.name);\r",
							"\r",
							"// 19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", req.age);\r",
							"\r",
							"// 20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", req.salary);\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"for( var i=0; i<resp.salary.length; i++){\r",
							"    console.log(\"cycle with salary №\" , i ,resp.salary[i]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Vova&age=25&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Vova"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"pm.environment.get(\"salary\");\r",
							"\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"pm.environment.get(\"age\");\r",
							"\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"pm.environment.get(\"name\");\r",
							"\r",
							"// 4. Отправить запрос.\r",
							"\r",
							"// 5. Статус код 200\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6. Спарсить response body в json.\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"// 7. Спарсить request.\r",
							"    var req = request.data\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"    pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property('start_qa_salary');\r",
							"});\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"    pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property('qa_salary_after_6_months');\r",
							"});\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"    pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property('qa_salary_after_12_months');\r",
							"});\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"    pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property('qa_salary_after_1.5_year');\r",
							"    });\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"    pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property('qa_salary_after_3.5_years');\r",
							"    });\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"    pm.test(\"person\", function () {\r",
							"    pm.expect(jsonData).to.have.property('person');\r",
							"    });\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"    pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(+req.salary).to.eql(jsonData.start_qa_salary);\r",
							"    });\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"    pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(+req.salary*2).to.eql(jsonData.qa_salary_after_6_months);\r",
							"    });\r",
							"\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"    pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(+req.salary*2.7).to.eql(jsonData.qa_salary_after_12_months);\r",
							"    });\r",
							"\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"    pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(+req.salary*3.3).to.eql(jsonData[\"qa_salary_after_1.5_year\"]);\r",
							"    });\r",
							"\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"    pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(+req.salary*3.8).to.eql(jsonData[\"qa_salary_after_3.5_years\"]);\r",
							"    });\r",
							"    \r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"    pm.test(\"person, 1-й элемент \", function () {\r",
							"    pm.expect(+req.salary).to.eql(jsonData.person.u_name[1]);\r",
							"    });\r",
							"\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"    pm.test(\"person, 1-й элемент \", function () {\r",
							"    pm.expect(+req.age).to.eql(jsonData.person.u_name[2]);\r",
							"    });\r",
							"\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"    pm.test(\"u_salary_5_years\", function () {\r",
							"    pm.expect(req.salary*4.2).to.eql(jsonData.person.u_salary_5_years);\r",
							"    });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vova",
							"type": "text"
						},
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}